#!/bin/bash

# Check if the SKIP_LINT environment variable is set
if [[ "$SKIP_LINT" == "true" ]]; then
  echo "Skipping lint and prettier due to SKIP_LINT environment variable."
  exit 0
fi

# Get the root directory of the Git repository
REPO_ROOT=$(git rev-parse --show-toplevel)
if [ $? -ne 0 ]; then
  echo "Error: Not in a Git repository."
  exit 1
fi

# Move to the root directory
cd "$REPO_ROOT" || exit

# Check if nx is installed
if ! command -v nx &> /dev/null; then
  echo "Error: 'nx' command not found."
  echo "Please install it globally with one of the following commands:"
  echo "  npm install -g nx"
  echo "  yarn global add nx"
  exit 1
fi

# Get the list of changed files (staged for commit)
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.ts\|\.js\|\.jsx\|\.tsx')

if [ -z "$CHANGED_FILES" ]; then
  echo "No JavaScript/TypeScript files changed. Skipping lint and formatting."
  exit 0
fi

# Run Prettier on the changed files
echo "Running Prettier on the following files:"
echo "$CHANGED_FILES"
npx prettier --write $CHANGED_FILES

# Stage the Prettier changes
git add $CHANGED_FILES

# Get the list of affected projects based on the changed files
AFFECTED_PROJECTS=$(nx show projects --affected --files=$CHANGED_FILES --target=lint --select=projects)

if [ -z "$AFFECTED_PROJECTS" ]; then
  echo "No affected projects found for the changed files. Skipping lint."
  exit 0
fi

# Run Nx lint on all affected projects
echo "Running Nx lint on the affected projects:"
echo "$AFFECTED_PROJECTS"
nx run-many --target=lint --projects=$AFFECTED_PROJECTS --fix --silent
LINT_EXIT_CODE=$?

# Check if the linter was able to fix all errors
if [ $LINT_EXIT_CODE -ne 0 ]; then
  echo "Linting failed. Please fix the issues and try again."
  
  # Abort the commit
  exit 1
fi

# Stage the changes that were auto-fixed by Nx lint
echo "Auto-fix applied by Nx lint. Staging changes..."
git add $(git diff --name-only)

# Allow commit to proceed
exit 0
